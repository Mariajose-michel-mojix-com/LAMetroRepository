(function (){
        load("UTILS");
        var ruleProperties = {
            title : 'Dispatch',
            tenant : 'LAM',
            thingType : 'TVMEvent',
            thingTypeCode : 'TVMEVENT',
            stationThingTypeCode: 'STATION'
        };

        logHeader = ruleProperties.title;
        gLogState = true; //Show logs

        // START log of rule
        printLog("======================================= "+logHeader+"=============================================");

        if(thingTypeCode !== "TVMEVENTS"){
            return false;
        }
        if(source === "SERVICES"){

            //Retrieve values from message
            var udfs = {
                facId : getUDFvalue("FACID"),
                DispatchedAssociate : getUDFvalue("DispatchedAssociate"),
                DispatchStatus : getUDFvalue("DispatchStatus")
            };

            var Dispatch_Props = {
                Dispatch : false,
                DispatchStatus : "",
                DispatchedAssociate: ""
            };

            printLog("DispatchedAssociate:: "+udfs.DispatchedAssociate);

            if(udfs.DispatchedAssociate){ //Dispatch from DataEntry
                appendUDF('Dispatch', true);
                appendUDF('DispatchStatus', "ASSIGNED");
                Dispatch_Props.Dispatch = true;
                Dispatch_Props.DispatchStatus = "ASSIGNED";
                Dispatch_Props.DispatchedAssociate = udfs.DispatchedAssociate;

            } else{ //Unassign Dispatch
                appendUDF('Dispatch', false);
                appendUDF('DispatchStatus', "UNASSIGNED");
                Dispatch_Props.Dispatch = false;
                Dispatch_Props.DispatchStatus = "UNASSIGNED";
                Dispatch_Props.DispatchedAssociate = "";
            }

            PropertySetter(UDFS);

            logger.info(JSON.stringify(Dispatch_Props));

            updateStation(udfs.facId,Dispatch_Props);


        } else{
            return false;
        }

        /* This Function will send an update to STATION thing type
         using its serial number from FACID
         */
        function updateStation(stationSerialNumber, Dispatch_Props){
            var message = {
                "thingTypeCode": "/"+ruleProperties.tenant+"/"+ruleProperties.stationThingTypeCode,
                "groupCode": ruleProperties.tenant,
                "time": Date.now(),
                "serialNumber": stationSerialNumber,
                "udfs": {
                    "Dispatch_Props": JSON.stringify(Dispatch_Props),
                    "source": "DISPATCHRULE"
                }
            };
            message = JSON.stringify(message);
            
            thingWrapper.sendThingsMessage(message);
        }

    }
) ();

